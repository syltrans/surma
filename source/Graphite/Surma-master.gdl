#include "stddef.gdh"

/* This file defines the glyph classes and rules for Surma Graphite rendering. */
/* The glyph list is autogenerated by make_gdl, which #includes this file at the end. */
/* sps 30-July-2019 */

/* sps 07-Jan-2021: */
/* remove word-final halant handling and replace with new Unicode char A82C (Alternate Hasant)

/* sps 24-Mar-2021: */
/* add conjuncts Cho-No, Pho-No, Do-No and Do-To, Do-So */


/* Define glyph classes */

table(glyph)

c_BaseChars = (ga800, ga801, ga803, ga804, ga805, ga807, ga808, ga809,
    ga80a, ga80c, ga80d, ga80e, ga80f, ga810, ga811, ga812,
    ga813, ga814, ga815, ga816, ga817, ga818, ga819, ga81a,
    ga81b, ga81c, ga81d, ga81e, ga81f, ga820, ga821, ga822,
    ga823, ga824, ga827, ga807_a806_a807, ga807_a806_a808, ga807_a806_a810, ga807_a806_a814, ga807_a806_a81e,
    ga807_a806_a81f, ga807_a806_a821, ga808_a806_a814, ga808_a806_a81b, ga809_a806_a818, ga80c_a806_a80c, ga80c_a806_a80d, ga80d_a806_a815,
    ga80e_a806_a80e, ga814_a806_a814, ga814_a806_a815, ga814_a806_a81e, ga816_a806_a816, ga818_a806_a807, ga818_a806_a809, ga818_a806_a80c,
    ga818_a806_a80d, ga818_a806_a80e, ga818_a806_a810, ga818_a806_a812, ga818_a806_a814, ga818_a806_a816, ga818_a806_a817, ga818_a806_a818,
    ga818_a806_a821, ga819_a806_a80d, ga819_a806_a810, ga819_a806_a814, ga819_a806_a819, ga819_a806_a821, ga81a_a806_a80d, ga81b_a806_a816,
    ga81b_a806_a81b, ga81d_a806_a819, ga81d_a806_a81b, ga81d_a806_a81d, ga81f_a806_a81f, ga821_a806_a807, ga821_a806_a80c, ga821_a806_a80d,
    ga821_a806_a810, ga821_a806_a811, ga821_a806_a814, ga821_a806_a815, ga821_a806_a81b, ga807_a806_a807_alt, ga827_a80b, ga809_a806_a809,
    ga821_a806_a821, ga810_a806_a810, ga816_a806_a81e, ga81a_a806_a814, ga81a_a806_a81e,
    ga81a_a806_a81f, ga81a_a806_a821, ga81e_a806_a80a, ga81e_a806_a814, ga81e_a806_a815, ga81e_a806_a818, ga81e_a806_a81b, ga81e_a806_a81c,
    ga81e_a806_a80c, ga81e_a806_a812, ga80d_a806_a814, ga80d_a806_a81e, ga80d_a806_a81f, ga80d_a806_a821, ga80e_a806_a81b,
    ga810_a806_a81e, ga812_a806_a812, ga812_a806_a81e, ga81f_a806_a810, ga81f_a806_a812, ga81f_a806_a819, ga822_a806_a81e,
    ga80d_a806_a818, ga81a_a806_a818, ga816_a806_a818, ga816_a806_a814, ga816_a806_a821);

c_BaseCharsSP = (ga800, ga801, ga803, ga804, ga805, ga807, ga808, ga809,
    ga80a, ga80c, ga80d, ga80e, ga80f, ga810, ga811, ga812,
    ga813, ga814, ga815, ga816, ga817, ga818, ga819, ga81a,
    ga81b, ga81c, ga81d, ga81e, ga81f, ga820, ga821, ga822,
    ga823, ga824, ga827, ga807_a806_a807, ga807_a806_a808, ga807_a806_a810, ga807_a806_a814, ga807_a806_a81e,
    ga807_a806_a81f, ga807_a806_a821, ga808_a806_a814, ga808_a806_a81b, ga809_a806_a818, ga80c_a806_a80c, ga80c_a806_a80d, ga80d_a806_a815,
    ga80e_a806_a80e, ga814_a806_a814, ga814_a806_a815, ga814_a806_a81e, ga816_a806_a816, ga818_a806_a807, ga818_a806_a809, ga818_a806_a80c,
    ga818_a806_a80d, ga818_a806_a80e, ga818_a806_a810, ga818_a806_a812, ga818_a806_a814, ga818_a806_a816, ga818_a806_a817, ga818_a806_a818,
    ga818_a806_a821, ga819_a806_a80d, ga819_a806_a810, ga819_a806_a814, ga819_a806_a819, ga819_a806_a821, ga81a_a806_a80d, ga81b_a806_a816,
    ga81b_a806_a81b, ga81d_a806_a819, ga81d_a806_a81b, ga81d_a806_a81d, ga81f_a806_a81f, ga821_a806_a807, ga821_a806_a80c, ga821_a806_a80d,
    ga821_a806_a810, ga821_a806_a811, ga821_a806_a814, ga821_a806_a815, ga821_a806_a81b, ga807_a806_a807_alt, ga827_a80b, ga809_a806_a809,
    ga821_a806_a821, ga810_a806_a810, g00a0, g2000, g2001, g2002, g2003, g2004, g2005, g2006, g2007, g2008, g2009, g200a, g202f, 
    ga816_a806_a81e, ga81a_a806_a814, ga81a_a806_a81e,
    ga81a_a806_a81f, ga81a_a806_a821, ga81e_a806_a80a, ga81e_a806_a814, ga81e_a806_a815, ga81e_a806_a818, ga81e_a806_a81b, ga81e_a806_a81c,
    ga81e_a806_a80c, ga81e_a806_a812, ga80d_a806_a814, ga80d_a806_a81e, ga80d_a806_a81f, ga80d_a806_a821, ga80e_a806_a81b,
    ga810_a806_a81e, ga812_a806_a812, ga812_a806_a81e, ga81f_a806_a810, ga81f_a806_a812, ga81f_a806_a819, ga822_a806_a81e,
    ga80d_a806_a818, ga81a_a806_a818, ga816_a806_a818, ga816_a806_a814, ga816_a806_a821);

c_LDia = (ga82c);

c_UDia = (ga802, ga80b, ga826, ga826_a80b, ga802_a80b);

c_Ukar = (ga825, ga825_do, ga825_left);

c_DoChars = (ga816, ga816_a806_a816, ga818_a806_a816, ga81b_a806_a816, ga816_a806_a81e, ga816_a806_a818 ga816_a806_a814 ga816_a806_a821);

c_TakesDoUkar = (ga816, ga816_a806_a816, ga818_a806_a816, ga81b_a806_a816, ga816_a806_a81e, ga81a_a806_a80d, ga80e_a806_a81b,
                 ga816_a806_a818 ga816_a806_a814 ga816_a806_a821);

c_TakesLeftUkar = (ga80f, ga811, ga812, ga813, ga81a, ga820, ga818_a806_a812, ga821_a806_a811, ga81a_a806_a814, ga81a_a806_a818, ga81a_a806_a81e, ga81a_a806_a81f,
                   ga81a_a806_a821, ga812_a806_a812);

c_THalfAdj = (ga809, ga80a, ga80c, ga80e, ga815, ga816, ga817, ga81b, ga81c, ga81d)

c_TrlsHalf = (ga814_half, ga818_half, ga81e_half, ga81f_half, ga821_half);

c_UseHalfTrls = (ga800, ga807, ga808, ga809, ga80a, ga80c, ga80d, ga80e, ga814, ga815, ga816, ga817, ga818, ga819, ga81a, ga81b,
                 ga81c, ga81d, ga821, ga81f_a806_a819);


/* Ligature Classes */

c_MakeConjAfterKa = (ga807, ga808, ga810, ga814, ga818, ga81e, ga81f, ga821);

c_ConjAfterKa = (ga807_a806_a807, ga807_a806_a808, ga807_a806_a810, ga807_a806_a814,
                 ga807_a806_a818, ga807_a806_a81e, ga807_a806_a81f, ga807_a806_a821);

endtable;  /* glyphs */


table(subs)

/* Conjuncts */
ga807 ga806 c_MakeConjAfterKa  > _ _ c_ConjAfterKa:(1 2 3);

ga808 ga806 ga814 > _ _ ga808_a806_a814:(1 2 3);
ga808 ga806 ga81b > _ _ ga808_a806_a81b:(1 2 3);
ga809 ga806 ga818 > _ _ ga809_a806_a818:(1 2 3);
ga80c ga806 ga80c > _ _ ga80c_a806_a80c:(1 2 3);
ga80c ga806 ga80d > _ _ ga80c_a806_a80d:(1 2 3);
ga80d ga806 ga815 > _ _ ga80d_a806_a815:(1 2 3);
ga80e ga806 ga80e > _ _ ga80e_a806_a80e:(1 2 3);
ga814 ga806 ga814 > _ _ ga814_a806_a814:(1 2 3);
ga814 ga806 ga815 > _ _ ga814_a806_a815:(1 2 3);
ga814 ga806 ga81e > _ _ ga814_a806_a81e:(1 2 3);
ga816 ga806 ga816 > _ _ ga816_a806_a816:(1 2 3);
ga818 ga806 ga807 > _ _ ga818_a806_a807:(1 2 3);
ga818 ga806 ga809 > _ _ ga818_a806_a809:(1 2 3);
ga818 ga806 ga80c > _ _ ga818_a806_a80c:(1 2 3);
ga818 ga806 ga80d > _ _ ga818_a806_a80d:(1 2 3);
ga818 ga806 ga80e > _ _ ga818_a806_a80e:(1 2 3);
ga818 ga806 ga810 > _ _ ga818_a806_a810:(1 2 3);
ga818 ga806 ga812 > _ _ ga818_a806_a812:(1 2 3);
ga818 ga806 ga814 > _ _ ga818_a806_a814:(1 2 3);
ga818 ga806 ga816 > _ _ ga818_a806_a816:(1 2 3);
ga818 ga806 ga817 > _ _ ga818_a806_a817:(1 2 3);
ga818 ga806 ga818 > _ _ ga818_a806_a818:(1 2 3);
ga818 ga806 ga821 > _ _ ga818_a806_a821:(1 2 3);
ga819 ga806 ga80d > _ _ ga819_a806_a80d:(1 2 3);
ga819 ga806 ga810 > _ _ ga819_a806_a810:(1 2 3);
ga819 ga806 ga814 > _ _ ga819_a806_a814:(1 2 3);
ga819 ga806 ga819 > _ _ ga819_a806_a819:(1 2 3);
ga819 ga806 ga821 > _ _ ga819_a806_a821:(1 2 3);
ga81a ga806 ga80d > _ _ ga81a_a806_a80d:(1 2 3);
ga81b ga806 ga816 > _ _ ga81b_a806_a816:(1 2 3);
ga81b ga806 ga81b > _ _ ga81b_a806_a81b:(1 2 3);
ga81d ga806 ga819 > _ _ ga81d_a806_a819:(1 2 3);
ga81d ga806 ga81b > _ _ ga81d_a806_a81b:(1 2 3);
ga81d ga806 ga81d > _ _ ga81d_a806_a81d:(1 2 3);
ga81f ga806 ga81f > _ _ ga81f_a806_a81f:(1 2 3);
ga821 ga806 ga807 > _ _ ga821_a806_a807:(1 2 3);
ga821 ga806 ga80c > _ _ ga821_a806_a80c:(1 2 3);
ga821 ga806 ga80d > _ _ ga821_a806_a80d:(1 2 3);
ga821 ga806 ga810 > _ _ ga821_a806_a810:(1 2 3);
ga821 ga806 ga811 > _ _ ga821_a806_a811:(1 2 3);
ga821 ga806 ga814 > _ _ ga821_a806_a814:(1 2 3);
ga821 ga806 ga815 > _ _ ga821_a806_a815:(1 2 3);
ga821 ga806 ga81b > _ _ ga821_a806_a81b:(1 2 3);
ga809 ga806 ga809 > _ _ ga809_a806_a809:(1 2 3);
ga810 ga806 ga810 > _ _ ga810_a806_a810:(1 2 3);
ga821 ga806 ga821 > _ _ ga821_a806_a821:(1 2 3);
ga816 ga806 ga81e > _ _ ga816_a806_a81e:(1 2 3);
ga81a ga806 ga814 > _ _ ga81a_a806_a814:(1 2 3);
ga81a ga806 ga81e > _ _ ga81a_a806_a81e:(1 2 3);
ga81a ga806 ga81f > _ _ ga81a_a806_a81f:(1 2 3);
ga81a ga806 ga821 > _ _ ga81a_a806_a821:(1 2 3);
ga81e ga806 ga80a > _ _ ga81e_a806_a80a:(1 2 3);
ga81e ga806 ga814 > _ _ ga81e_a806_a814:(1 2 3);
ga81e ga806 ga815 > _ _ ga81e_a806_a815:(1 2 3);
ga81e ga806 ga818 > _ _ ga81e_a806_a818:(1 2 3);
ga81e ga806 ga81b > _ _ ga81e_a806_a81b:(1 2 3);
ga81e ga806 ga81c > _ _ ga81e_a806_a81c:(1 2 3);
ga81e ga806 ga80c > _ _ ga81e_a806_a80c:(1 2 3);
ga81e ga806 ga812 > _ _ ga81e_a806_a812:(1 2 3);
ga80d ga806 ga814 > _ _ ga80d_a806_a814:(1 2 3);
ga80d ga806 ga81e > _ _ ga80d_a806_a81e:(1 2 3);
ga80d ga806 ga81f > _ _ ga80d_a806_a81f:(1 2 3);
ga80d ga806 ga821 > _ _ ga80d_a806_a821:(1 2 3);
ga80e ga806 ga81b > _ _ ga80e_a806_a81b:(1 2 3);

/* added July 2019 */
ga810 ga806 ga81e > _ _ ga810_a806_a81e:(1 2 3);
ga812 ga806 ga812 > _ _ ga812_a806_a812:(1 2 3);
ga812 ga806 ga81e > _ _ ga812_a806_a81e:(1 2 3);
ga81f ga806 ga810 > _ _ ga81f_a806_a810:(1 2 3);
ga81f ga806 ga812 > _ _ ga81f_a806_a812:(1 2 3);
ga81f ga806 ga819 > _ _ ga81f_a806_a819:(1 2 3);
ga822 ga806 ga81e > _ _ ga822_a806_a81e:(1 2 3);

/* Added March 2021 */
ga80d ga806 ga818 > _ _ ga80d_a806_a818:(1 2 3);	/* cho-no */
ga81a ga806 ga818 > _ _ ga81a_a806_a818:(1 2 3);	/* pho-no */
ga816 ga806 ga818 > _ _ ga816_a806_a818:(1 2 3);	/* do-no */
ga816 ga806 ga814 > _ _ ga816_a806_a814:(1 2 3);	/* do-to */
ga816 ga806 ga821 > _ _ ga816_a806_a821:(1 2 3);	/* do-so */

/* half forms */
ga806 ga814 > _ ga814_half:(1 2) / c_UseHalfTrls _ _;
ga806 ga81e > _ ga81e_half:(1 2) / c_UseHalfTrls _ _;
ga806 ga81f > _ ga81f_half:(1 2) / c_UseHalfTrls _ _;
ga806 ga821 > _ ga821_half:(1 2) / c_UseHalfTrls _ _;
ga806 ga818 > _ ga818_half:(1 2) / c_UseHalfTrls _ _;	/* added July 2019 */

/* stack double-ro */
ga81e ga806 ga81e > _ ga81e ga81e_half:(1 2 3);

/* pre-form of ro */
ga81e ga806 > _ ga81e_pre:(1 2) / _ _ c_BaseChars;

/* mark ligatures */
ga826 ga80b > _ ga826_a80b:(1 2);	/* ekar+anusvara */
ga827 ga80b > _ ga827_a80b:(1 2);	/* ookar+anusvara */ 
ga802 ga80b > _ ga802_a80b:(1 2);	/* dvisvara+anusvara */ 

/* ukar selection */
ga825 > ga825_left / c_TakesLeftUkar _;
ga825 > ga825_do / c_TakesDoUkar c_TrlsHalf? _;  /* may be half trls in between */
 
endtable;	/* subs */


table(pos)

#define attached user1

// Could be a trls in between when we do the LDia
// Could be a trls or ukar in between when we do the upper diacritics (only anusvara and dvisvara)

c_BaseCharsSP c_LDia {attach {to=@1; at=LS; with=LM}; attached = 1}	/ ^ _ c_TrlsHalf? _ {attached == 0};
c_BaseCharsSP c_UDia {attach {to=@1; at=US; with=UM}; attached = 1}	/ ^ _ c_TrlsHalf? c_Ukar? _ {attached == 0};

/* adjust ukar on ph+l and j+bo conjuncts */
ga81a_a806_a81f ga825_left {shift.x=40m; shift.y=-90m; advance.x=advancewidth+40m};
ga80e_a806_a81b ga825_do {shift.x=-180m; advance.x=advancewidth-90m};  /* shifts left 180, but only reduces width by 90 */

/* move comma away from do chars */
c_DoChars g_comma {kern.x = 100m; kern.y=-50m};

/* move half-t down on 'THalfAdj' characters */
c_THalfAdj ga814_half {shift.y=-150m};

/* move half-t down and ukar right on 'THalfAdj' characters if ukar present */
c_THalfAdj ga814_half {shift.y=-110m} ga825 {kern.x=50m};

endtable; 	/* pos */
